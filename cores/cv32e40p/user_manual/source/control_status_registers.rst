.. _cs-registers:

Control and Status Registers
============================

CV32E40P does not implement all control and status registers specified in
the RISC-V privileged specifications, but is limited to the registers
that were needed for the PULP system. The reason for this is that we
wanted to keep the footprint of the core as low as possible and avoid
any overhead that we do not explicitly need.

Writes of a non-supported value to a CSR does not throw an illegal
instruction exception.

+---------------+-------------------+-----------+---------------------------------------------------------+
|  CSR Address  |   Name            | Privilege |   Description                                           |
+---------------+-------------------+-----------+---------------------------------------------------------+
|               |                   |           |                                                         |
+===============+===================+===========+=========================================================+
| User CSRs                                                                                               |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x001         | ``fflags``        | URW       | Floating-point accrued exceptions.                      |
|               |                   |           | Only present if ``FPU`` = 1.                            |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x002         | ``frm``           | URW       | Floating-point dynamic rounding mode.                   |
|               |                   |           | Only present if ``FPU`` = 1.                            |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x003         | ``fcsr``          | URW       | Floating-point control and status register.             |
|               |                   |           | Only present if ``FPU`` = 1.                            |
+---------------+-------------------+-----------+---------------------------------------------------------+
| User Custom CSRs                                                                                        |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7C0         | ``lpstart0``      | URW       | Hardware Loop 0 Start.                                  |
|               |                   |           | Only present if ``PULP_XPULP`` = 1.                     |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7C1         | ``lpend0``        | URW       | Hardware Loop 0 End.                                    |
|               |                   |           | Only present if ``PULP_XPULP`` = 1.                     |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7C2         | ``lpcount0``      | URW       | Hardware Loop 0 Counter.                                |
|               |                   |           | Only present if ``PULP_XPULP`` = 1.                     |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7C4         | ``lpstart1``      | URW       | Hardware Loop 1 Start.                                  |
|               |                   |           | Only present if ``PULP_XPULP`` = 1.                     |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7C5         | ``lpend1``        | URW       | Hardware Loop 1 End.                                    |
|               |                   |           | Only present if ``PULP_XPULP`` = 1.                     |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7C6         | ``lpcount1``      | URW       | Hardware Loop 1 Counter.                                |
|               |                   |           | Only present if ``PULP_XPULP`` = 1.                     |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x006         | ``fprec``         | URW       | Custom flag which controls the precision and latency    |
|               |                   |           | of the iterative div/sqrt unit.                         |
|               |                   |           | Only present if ``FPU`` = 1 and ``PULP_XPULP`` = 1.     |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xC10         | ``privlv``        | URO       | Privilege Level                                         |
|               |                   |           | Only present if ``PULP_XPULP`` = 1.                     |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x014         | ``uhartid``       | URO       | Hardware Thread ID                                      |
|               |                   |           | Only present if ``PULP_XPULP`` = 1.                     |
+---------------+-------------------+-----------+---------------------------------------------------------+
| Machine CSRs                                                                                            |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x300         | ``mstatus``       | MRW       | Machine Status                                          |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x301         | ``misa``          | MRW       | Machine ISA                                             |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x304         | ``mie``           | MRW       | Machine Interrupt Enable Register                       |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x305         | ``mtvec``         | MRW       | Machine Trap-Handler Base Address                       |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x320         | ``mcountinhibit`` | MRW       | (HPM) Machine Counter-Inhibit Register                  |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x323         | ``mphmevent3``    | MRW       | (HPM) Machine Performance-Monitoring Event Selector 3   |
+---------------+-------------------+-----------+---------------------------------------------------------+
| .               .                   .           .                                                       |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x33F         | ``mphmevent31``   | MRW       | (HPM) Machine Performance-Monitoring Event Selector 31  |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x340         | ``mscratch``      | MRW       | Machine Scratch                                         |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x341         | ``mepc``          | MRW       | Machine Exception Program Counter                       |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x342         | ``mcause``        | MRW       | Machine Trap Cause                                      |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x343         | ``mtval``         | MRW       | Machine Trap Value                                      |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x344         | ``mip``           | MRW       | Machine Interrupt Pending Register                      |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7A0         | ``tselect``       | MRW       | Trigger Select Register                                 |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7A1         | ``tdata1``        | MRW       | Trigger Data Register 1                                 |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7A2         | ``tdata2``        | MRW       | Trigger Data Register 2                                 |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7A3         | ``tdata3``        | MRW       | Trigger Data Register 3                                 |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7A4         | ``tinfo``         | MR        | Trigger Info                                            |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7A8         | ``mcontext``      | MRW       | Machine Context Register                                |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7AA         | ``scontext``      | MRW       | Machine Context Register                                |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7B0         | ``dcsr``          | DRW       | Debug Control and Status                                |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7B1         | ``dpc``           | DRW       | Debug PC                                                |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7B2         | ``dscratch0``     | DRW       | Debug Scratch Register 0                                |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0x7B3         | ``dscratch1``     | DRW       | Debug Scratch Register 1                                |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xB00         | ``mcycle``        | MRW       | (HPM) Machine Cycle Counter                             |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xB02         | ``minstret``      | MRW       | (HPM) Machine Instructions-Retired Counter              |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xB03         | ``mhpmcounter3``  | MRW       | (HPM) Machine Performance-Monitoring Counter 3          |
+---------------+-------------------+-----------+---------------------------------------------------------+
| .               .                   .           .                                                       |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xB1F         | ``mhpmcounter31`` | MRW       | (HPM) Machine Performance-Monitoring Counter 31         |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xB80         | ``mcycleh``       | MRW       | (HPM) Upper 32 Machine Cycle Counter                    |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xB82         | ``minstreth``     | MRW       | (HPM) Upper 32 Machine Instructions-Retired Counter     |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xB83         | ``mhpmcounterh3`` | MRW       | (HPM) Upper 32 Machine Performance-Monitoring Counter 3 |
+---------------+-------------------+-----------+---------------------------------------------------------+
| .               .                   .           .                                                       |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xB9F         | ``mhpmcounterh31``| MRW       | (HPM) Upper 32 Machine Performance-Monitoring Counter 31|
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xF11         | ``mvendorid``     | MRO       | Machine Vendor ID                                       |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xF12         | ``marchid``       | MRO       | Machine Architecture ID                                 |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xF13         | ``mimpid``        | MRO       | Machine Implementation ID                               |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xF14         | ``mhartid``       | MRO       | Hardware Thread ID                                      |
+---------------+-------------------+-----------+---------------------------------------------------------+
| Unprivileged CSRs                                                                                       |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xC00         | ``cycle``         | URO       | (HPM) Cycle Counter                                     |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xC02         | ``instret``       | URO       | (HPM) Instructions-Retired Counter                      |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xC03         | ``hpmcounter3``   | URO       | (HPM) Performance-Monitoring Counter 3                  |
+---------------+-------------------+-----------+---------------------------------------------------------+
| .               .                   .           .                                                       |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xC1F         | ``hpmcounter31``  | URO       | (HPM) Performance-Monitoring Counter 31                 |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xC80         | ``cycleh``        | URO       | (HPM) Upper 32 Cycle Counter                            |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xC82         | ``instreth``      | URO       | (HPM) Upper 32 Instructions-Retired Counter             |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xC83         | ``hpmcounterh3``  | URO       | (HPM) Upper 32 Performance-Monitoring Counter 3         |
+---------------+-------------------+-----------+---------------------------------------------------------+
| .               .                   .           .                                                       |
+---------------+-------------------+-----------+---------------------------------------------------------+
| 0xC9F         | ``hpmcounterh31`` | URO       | (HPM) Upper 32 Performance-Monitoring Counter 31        |
+---------------+-------------------+-----------+---------------------------------------------------------+

Table 7: Control and Status Register Map

.. only:: USER

  +-------------------+----------------+------------+------------------------------------------+
  | CSR address       |   Name         | Privilege  |   Description                            |
  +-------------------+----------------+------------+------------------------------------------+
  |                   |                |            |                                          |
  +===================+================+============+==========================================+
  | 0x000             | ``ustatus``    | URW        | User Status                              |
  +-------------------+----------------+------------+------------------------------------------+
  | 0x005             | ``utvec``      | URW        | User Trap-Handler Base Address           |
  +-------------------+----------------+------------+------------------------------------------+
  | 0x041             | ``uepc``       | URW        | User Exception Program Counter           |
  +-------------------+----------------+------------+------------------------------------------+
  | 0x042             | ``ucause``     | URW        | User Trap Cause                          |
  +-------------------+----------------+------------+------------------------------------------+
  | 0x306             | ``mcounteren`` | MRW        | Machine Counter Enable                   |
  +-------------------+----------------+------------+------------------------------------------+

  Table 8: Control and Status Register Map (additional CSRs for User mode)

.. _csr-fflags:

Floating-point accrued exceptions (``fflags``)
----------------------------------------------

CSR Address: 0x001 (only present if ``FPU`` = 1)

Reset Value: 0x0000_0000

+-------------+-----------+-------------------------------------------------------------------------+
|   Bit #     |   R/W     |   Description                                                           |
+=============+===========+=========================================================================+
| 31:5        | R/W       | Writes are ignored; reads return 0.                                     |
+-------------+-----------+-------------------------------------------------------------------------+
| 4           | R/W       | NV- Invalid Operation                                                   |
+-------------+-----------+-------------------------------------------------------------------------+
| 3           | R/W       | DZ - Divide by Zero                                                     |
+-------------+-----------+-------------------------------------------------------------------------+
| 2           | R/W       | OF - Overflow                                                           |
+-------------+-----------+-------------------------------------------------------------------------+
| 1           | R/W       | UF - Underflow                                                          |
+-------------+-----------+-------------------------------------------------------------------------+
| 0           | R/W       | NX - Inexact                                                            |
+-------------+-----------+-------------------------------------------------------------------------+

.. _csr-frm:

Floating-point dynamic rounding mode (``frm``)
----------------------------------------------

CSR Address: 0x002 (only present if ``FPU`` = 1)

Reset Value: 0x0000_0000

+-------------+-----------+------------------------------------------------------------------------+
|   Bit #     |   R/W     |   Description                                                          |
+=============+===========+========================================================================+
| 31:3        | R/W       | Writes are ignored; reads return 0.                                    |
+-------------+-----------+------------------------------------------------------------------------+
| 2:0         | R/W       | Rounding mode. 000 = RNE, 001 = RTZ, 010 = RDN, 011 = RUP, 100 = RMM   |
|             |           | 101 = Invalid, 110 = Invalid, 111 = DYN.                               |
+-------------+-----------+------------------------------------------------------------------------+

.. _csr-fcsr:

Floating-point control and status register (``fcsr``)
-----------------------------------------------------

CSR Address: 0x003 (only present if ``FPU`` = 1)

Reset Value: 0x0000_0000

+-------------+-----------+------------------------------------------------------------------------+
|   Bit #     |   R/W     |   Description                                                          |
+=============+===========+========================================================================+
| 31:8        | R/W       | Reserved. Writes are ignored; reads return 0.                          |
+-------------+-----------+------------------------------------------------------------------------+
| 7:5         | R/W       | Rounding Mode (``frm``)                                                |
+-------------+-----------+------------------------------------------------------------------------+
| 4:0         | R/W       | Accrued Exceptions (``fflags``)                                        |
+-------------+-----------+------------------------------------------------------------------------+

HWLoop Start Address 0/1 (``lpstart0/1``)
-----------------------------------------

CSR Address: 0x7C0/0x7C4 (only present if ``PULP_XPULP`` = 1)

Reset Value: 0x0000_0000

Detailed:

+-------------+-----------+-------------------------------------------+
|   Bit #     |   R/W     |   Description                             |
+=============+===========+===========================================+
| 31:0        | R/W       | Start Address of the HWLoop 0/1.          |
+-------------+-----------+-------------------------------------------+

HWLoop End Address 0/1 (``lpend0/1``)
-------------------------------------

CSR Address: 0x7C1/0x7C5 (only present if ``PULP_XPULP`` = 1)

Reset Value: 0x0000_0000

Detailed:

+-------------+-----------+-------------------------------------------+
|   Bit #     |   R/W     |   Description                             |
+=============+===========+===========================================+
| 31:0        | R/W       | End Address of the HWLoop 0/1.            |
+-------------+-----------+-------------------------------------------+

HWLoop Count Address 0/1 (``lpcount0/1``)
-----------------------------------------

CSR Address: 0x7C2/0x7C6 (only present if ``PULP_XPULP`` = 1)

Reset Value: 0x0000_0000

Detailed:

+-------------+-----------+-------------------------------------------+
|   Bit #     |   R/W     |   Description                             |
+=============+===========+===========================================+
| 31:0        | R/W       | Number of iteration of HWLoop 0/1.        |
+-------------+-----------+-------------------------------------------+

.. _csr-fprec:

Floating-point precision (``fprec``)
------------------------------------

CSR Address: 0x006 (only present if ``FPU`` = 1 and ``PULP_XPULP`` = 1)

Reset Value: 0x0000_0000

+-------------+-----------+----------------------------------------------------------------------------------+
|   Bit #     |   R/W     | Description                                                                      |
+=============+===========+==================================================================================+
| 31:5        | R/W       | Writes are ignored; reads return 0.                                              |
+-------------+-----------+----------------------------------------------------------------------------------+
| 4:0         | R/W       | Precision and latency of the iterative Floating-Point div/sqrt unit.             |
|             |           +-----------------------------------------------------------------------+----------+
|             |           | Value   | Precision                                                   | Latency  |
|             |           +---------+-------------------------------------------------------------+----------+
|             |           | 0       | Default value: single precision                             | 8        |
|             |           +---------+-------------------------------------------------------------+----------+
|             |           | 8 - 11  | Computes as many mantissa bits as specified ``fprec`` value | 5        |
|             |           +---------+-------------------------------------------------------------+----------+
|             |           | 12 - 15 |                                                             | 6        |
|             |           +---------+-------------------------------------------------------------+----------+
|             |           | 16 - 19 |                                                             | 7        |
|             |           +---------+-------------------------------------------------------------+----------+
|             |           | 20 - 23 |                                                             | 8        |
+-------------+-----------+---------+-------------------------------------------------------------+----------+

Privilege Level (``privlv``)
----------------------------

CSR Address: 0xC10 (only present if ``PULP_XPULP`` = 1)

Reset Value: 0x0000_0003

+-------------+-----------+--------------------------------------------------+
|   Bit #     | R         |   Description                                    |
+=============+===========+==================================================+
| 31:2        | R         | Reads as 0.                                      |
+-------------+-----------+--------------------------------------------------+
| 1:0         | R         | Current Privilege Level. 11 = Machine,           |
|             |           | 10 = Hypervisor, 01 = Supervisor, 00 = User.     |
|             |           | CV32E40P only supports machine mode.             |
+-------------+-----------+--------------------------------------------------+

Table 14: PRIVLV

User Hardware Thread ID (``uhartid``)
-------------------------------------

CSR Address: 0x014 (only present if ``PULP_XPULP`` = 1)

Reset Value: Defined

+-------------+-----------+--------------------------------------------------+
|   Bit #     | R         |   Description                                    |
+=============+===========+==================================================+
| 31:0        | R         | Hardware Thread ID                               |
+-------------+-----------+--------------------------------------------------+

Table 15: UHARTID

Machine Status (``mstatus``)
----------------------------

CSR Address: 0x300

Reset Value: 0x0000_1800

+-------------+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|   Bit #     |   R/W     |   Description                                                                                                                                                                                                                                                       |
+=============+===========+=====================================================================================================================================================================================================================================================================+
| 12:11       | R/W       | **MPP:** Machine Previous Priviledge mode, hardwired to 11 when the user mode is not enabled.                                                                                                                                                                       |
+-------------+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 7           | R/W       | **Previous Machine Interrupt Enable:** When an exception is encountered, MPIE will be set to MIE. When the mret instruction is executed, the value of MPIE will be stored to MIE.                                                                                   |
+-------------+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 4           | R/W       | **Previous User Interrupt Enable:** If user mode is enabled, when an exception is encountered, UPIE will be set to UIE. When the uret instruction is executed, the value of UPIE will be stored to UIE. *Note that PULP/issimo does not support USER interrupts.*   |
+-------------+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 3           | R/W       | **Machine Interrupt Enable:** If you want to enable interrupt handling in your exception handler, set the Interrupt Enable MIE to 1 inside your handler code.                                                                                                       |
+-------------+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0           | R/W       | **User Interrupt Enable:** If you want to enable user level interrupt handling in your exception handler, set the Interrupt Enable UIE to 1 inside your handler code. *Note that PULP/issimo does not support USER interrupts.*                                     |
+-------------+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. only:: USER

  User Status (``ustatus``)
  -------------------------

  CSR Address: 0x000

  Reset Value: 0x0000_0000

  Detailed:

  +-------------+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
  |   Bit #     |   R/W     |   Description                                                                                                                                                                                                                                                       |
  +=============+===========+=====================================================================================================================================================================================================================================================================+
  | 4           | R/W       | **Previous User Interrupt Enable:** If user mode is enabled, when an exception is encountered, UPIE will be set to UIE. When the uret instruction is executed, the value of UPIE will be stored to UIE.                                                             |
  +-------------+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
  | 0           | R/W       | **User Interrupt Enable:** If you want to enable user level interrupt handling in your exception handler, set the Interrupt Enable UIE to 1 inside your handler code.                                                                                               |
  +-------------+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Machine ISA (``misa``)
----------------------

CSR Address: 0x301

Reset Value: 0x0000_0000

Detailed:

+-------------+-----------+------------------------------------------------------------------------+
|   Bit #     |   R/W     |   Description                                                          |
+=============+===========+========================================================================+
| 31:0        | R/W       | Writes are ignored; reads return 0.                                    |
+-------------+-----------+------------------------------------------------------------------------+

Machine Interrupt Enable Register (``mie``)
-------------------------------------------

CSR Address: 0x304

Reset Value: 0x0000_0000

Detailed:

+-------------+-----------+------------------------------------------------------------------------------------------+
|   Bit #     |   R/W     |   Description                                                                            |
+=============+===========+==========================================================================================+
| 31:16       | R/W       | Machine Fast Interrupt Enables: Set bit x to enable interrupt irq_i[x].                  |
+-------------+-----------+------------------------------------------------------------------------------------------+
| 11          | R/W       | **Machine External Interrupt Enable (MEIE)**: If set, irq_i[11] is enabled.              |
+-------------+-----------+------------------------------------------------------------------------------------------+
| 7           | R/W       | **Machine Timer Interrupt Enable (MTIE)**: If set, irq_i[7] is enabled.                  |
+-------------+-----------+------------------------------------------------------------------------------------------+
| 3           | R/W       | **Machine Software Interrupt Enable (MSIE)**: if set, irq_i[3] is enabled.               |
+-------------+-----------+------------------------------------------------------------------------------------------+

Machine Trap-Vector Base Address (``mtvec``)
--------------------------------------------

CSR Address: 0x305

Reset Value: 0x0000_0001

Detailed:

+-------------+-----------+---------------------------------------------------------------------------------------------------------------+
|   Bit #     |   R/W     |   Description                                                                                                 |
+=============+===========+===============================================================================================================+
| 31 : 2      |   R/W     | BASE: The trap-handler base address, always aligned to 256 bytes, i.e., mtvec[7:2] is always set to 0.        |
+-------------+-----------+---------------------------------------------------------------------------------------------------------------+
|  1 : 0      |   R/W     | MODE: 00 = direct mode, 01 = vectored mode. Writes to bit 1 are ignored and this bit always reads as 0.       |
+-------------+-----------+---------------------------------------------------------------------------------------------------------------+

Table 9: MTVEC

When an exception or an interrupt is encountered, the core jumps to the corresponding
handler using the content of the MTVEC[31:8] as base address. Only
8-byte aligned addresses are allowed. Both direct mode and vectored mode
are supported.

.. only:: USER

  Machine Counter Enable (``mcounteren``)
  ---------------------------------------

  CSR Address: 0x306

  Reset Value: 0x0000_0000

  Detailed:

  Each bit in the machine counter-enable register allows the associated read-only
  unprivileged shadow performance register to be read from user mode. If the bit
  is clear an attempt to read the register in user mode will trigger an illegal
  instruction exception.

  +-------+------+------------------------------------------------------------------+
  | Bit#  | R/W  | Description                                                      |
  +=======+======+==================================================================+
  | 31:4  | R/W  | Dependent on number of counters implemented in design parameter  |
  +-------+------+------------------------------------------------------------------+
  | 3     | R/W  | **selectors:** hpmcounter3 enable for user mode                  |
  +-------+------+------------------------------------------------------------------+
  | 2     | R/W  | instret enable for user mode                                     |
  +-------+------+------------------------------------------------------------------+
  | 1     | R    | 0                                                                |
  +-------+------+------------------------------------------------------------------+
  | 0     | R/W  | cycle enable for user mode                                       |
  +-------+------+------------------------------------------------------------------+

Machine Counter-Inhibit Register (``mcountinhibit``)
----------------------------------------------------

CSR Address: 0x320

Reset Value: 0x0000_000D

The performance counter inhibit control register. The default value is to inihibit counters out of reset.
The bit returns a read value of 0 for non implemented counters. This reset value
shows the result using the default number of performance counters to be 1.

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:4  | R/W  | Dependent on number of counters implemented in design parameter  |
+-------+------+------------------------------------------------------------------+
| 3     | R/W  | **selectors:** mhpmcounter3 inhibit                              |
+-------+------+------------------------------------------------------------------+
| 2     | R/W  | minstret inhibit                                                 |
+-------+------+------------------------------------------------------------------+
| 1     | R    | 0                                                                |
+-------+------+------------------------------------------------------------------+
| 0     | R/W  | mcycle inhibit                                                   |
+-------+------+------------------------------------------------------------------+

Machine Performance Monitoring Event Selector (``mhpmevent3 .. mhpmevent31``)
-----------------------------------------------------------------------------

CSR Address: 0x323 - 0x33F

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:16 | R    | 0                                                                |
+-------+------+------------------------------------------------------------------+
| 15:0  | R/W  | **selectors:** Each bit represent a unique event to count        |
+-------+------+------------------------------------------------------------------+

The event selector fields are further described in Performance Counters section.
Non implemented counters always return a read value of 0.

Machine Scratch (``mscratch``)
------------------------------

CSR Address: 0x340

Reset Value: 0x0000_0000

Detailed:

+-------------+-----------+------------------------------------------------------------------------+
|   Bit #     |   R/W     |   Description                                                          |
+=============+===========+========================================================================+
| 31:0        | R/W       | Scratch value                                                          |
+-------------+-----------+------------------------------------------------------------------------+

Machine Exception PC (``mepc``)
-------------------------------

CSR Address: 0x341

Reset Value: 0x0000\_0000

+------+-------+
| 31   | 30: 0 |
+======+=======+
| MEPC |       |
+------+-------+

When an exception is encountered, the current program counter is saved
in MEPC, and the core jumps to the exception address. When a mret
instruction is executed, the value from MEPC replaces the current
program counter.

Machine Cause (``mcause``)
--------------------------

CSR Address: 0x342

Reset Value: 0x0000_0000

+-------------+-----------+----------------------------------------------------------------------------------+
|   Bit #     |   R/W     |   Description                                                                    |
+=============+===========+==================================================================================+
| 31          |   R       | **Interrupt:** This bit is set when the exception was triggered by an interrupt. |
+-------------+-----------+----------------------------------------------------------------------------------+
|  5 : 0      |   R       | **Exception Code**                                                               |
+-------------+-----------+----------------------------------------------------------------------------------+

Table 11: MCAUSE

Machine Trap Value (``mtval``)
------------------------------

CSR Address: 0x343

Reset Value: 0x0000_0000

Detailed:

+-------------+-----------+------------------------------------------------------------------------+
|   Bit #     |   R/W     |   Description                                                          |
+=============+===========+========================================================================+
| 31:0        | R/W       | Writes are ignored; reads return 0.                                    |
+-------------+-----------+------------------------------------------------------------------------+

Machine Interrupt Pending Register (``mip``)
--------------------------------------------

CSR Address: 0x344

Reset Value: 0x0000_0000

Detailed:

+-------------+-----------+---------------------------------------------------------------------------------------------------+
|   Bit #     |   R/W     |   Description                                                                                     |
+=============+===========+===================================================================================================+
| 31:16       | R         | Machine Fast Interrupts Pending: If bit x is set, interrupt irq_i[x] is pending.                  |
+-------------+-----------+---------------------------------------------------------------------------------------------------+
| 11          | R         | **Machine External Interrupt Pending (MEIP)**: If set, irq_i[11] is pending.                      |
+-------------+-----------+---------------------------------------------------------------------------------------------------+
| 7           | R         | **Machine Timer Interrupt Pending (MTIP)**: If set, irq_i[7] is pending.                          |
+-------------+-----------+---------------------------------------------------------------------------------------------------+
| 3           | R         | **Machine Software Interrupt Pending (MSIP)**: if set, irq_i[3] is pending.                       |
+-------------+-----------+---------------------------------------------------------------------------------------------------+

.. _csr-tselect:

Trigger Select Register (``tselect``)
-------------------------------------

CSR Address: 0x7A0

Reset Value: 0x0000_0000

Accessible in Debug Mode or M-Mode.

CV32E40P implements a single trigger, therefore this register will always read as zero

.. _csr-tdata1:

Trigger Data Register 1 (``tdata1``)
------------------------------------

CSR Address: 0x7A1

Reset Value: 0x2800_1000

Accessible in Debug Mode or M-Mode.
Since native triggers are not supported, writes to this register from M-Mode will be ignored.

CV32E40P only implements one type of trigger, Match Control. Most fields of this register will read as a fixed value to reflect the single mode that is supported, in particular, instruction address match as described in the Debug Specification 0.13.2 section 5.2.2 & 5.2.9.

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:28 | R    | **type:** 2 = Address/Data match trigger type.                   |
+-------+------+------------------------------------------------------------------+
| 27    | R    | **dmode:** 1 = Only debug mode can write tdata registers         |
+-------+------+------------------------------------------------------------------+
| 26:21 | R    | **maskmax:** 0 = Only exact matching supported.                  |
+-------+------+------------------------------------------------------------------+
| 20    | R    | **hit:** 0 = Hit indication not supported.                       |
+-------+------+------------------------------------------------------------------+
| 19    | R    | **select:** 0 = Only address matching is supported.              |
+-------+------+------------------------------------------------------------------+
| 18    | R    | **timing:** 0 = Break before the instruction at the specified    |
|       |      | address.                                                         |
+-------+------+------------------------------------------------------------------+
| 17:16 | R    | **sizelo:** 0 = Match accesses of any size.                      |
+-------+------+------------------------------------------------------------------+
| 15:12 | R    | **action:** 1 = Enter debug mode on match.                       |
+-------+------+------------------------------------------------------------------+
| 11    | R    | **chain:** 0 = Chaining not supported.                           |
+-------+------+------------------------------------------------------------------+
| 10:7  | R    | **match:** 0 = Match the whole address.                          |
+-------+------+------------------------------------------------------------------+
| 6     | R    | **m:** 1 = Match in M-Mode.                                      |
+-------+------+------------------------------------------------------------------+
| 5     | R    | zero.                                                            |
+-------+------+------------------------------------------------------------------+
| 4     | R    | **s:** 0 = S-Mode not supported.                                 |
+-------+------+------------------------------------------------------------------+
| 3     | R    | **u:** 1 = Match in U-Mode.                                      |
+-------+------+------------------------------------------------------------------+
| 2     | RW   | **execute:** Enable matching on instruction address.             |
+-------+------+------------------------------------------------------------------+
| 1     | R    | **store:** 0 = Store address / data matching not supported.      |
+-------+------+------------------------------------------------------------------+
| 0     | R    | **load:** 0 = Load address / data matching not supported.        |
+-------+------+------------------------------------------------------------------+

.. _csr-tdata2:

Trigger Data Register 2 (``tdata2``)
------------------------------------

CSR Address: 0x7A2

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:0  | R    | **data**                                                         |
+-------+------+------------------------------------------------------------------+

Accessible in Debug Mode or M-Mode. Since native triggers are not supported, writes to this register from M-Mode will be ignored.
This register stores the instruction address to match against for a breakpoint trigger.

Trigger Data Register 3 (``tdata3``)
------------------------------------

CSR Address: 0x7A3

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:0  | R    | 0                                                                |
+-------+------+------------------------------------------------------------------+

Accessible in Debug Mode or M-Mode.
CV32E40P does not support the features requiring this register. Writes are ignored and reads will always return zero.

.. _csr-tinfo:

Trigger Info (``tinfo``)
------------------------------------

CSR Address: 0x7A4

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:16 | R    | 0                                                                |
+-------+------+------------------------------------------------------------------+
| 15:0  | R    | **info**                                                         |
+-------+------+------------------------------------------------------------------+

The **info** field contains one bit for each possible `type` enumerated in
`tdata1`.  Bit N corresponds to type N.  If the bit is set, then that type is
supported by the currently selected trigger.  If the currently selected trigger
doesn’t exist, this field contains 1.

Accessible in Debug Mode or M-Mode.

Machine Context Register (``mcontext``)
---------------------------------------

CSR Address: 0x7A8

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:0  | R    | 0                                                                |
+-------+------+------------------------------------------------------------------+

Accessible in Debug Mode or M-Mode.
CV32E40P does not support the features requiring this register. Writes are ignored and reads will always return zero.

Supervisor Context Register (``scontext``)
------------------------------------------

CSR Address: 0x7AA

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:0  | R    | 0                                                                |
+-------+------+------------------------------------------------------------------+

Accessible in Debug Mode or M-Mode.
CV32E40P does not support the features requiring this register. Writes are ignored and reads will always return zero.

.. _csr-dcsr:

Debug Control and Status (``dcsr``)
-----------------------------------

CSR Address: 0x7B0

Reset Value: 0x0000_0003

Detailed:

+-------------+-----------+-------------------------------------------------------------------------------------------------+
|   Bit #     |   R/W     |   Description                                                                                   |
+=============+===========+=================================================================================================+
| 31:28       | R         | **xdebugver:** returns 4 - External debug support exists as it is described in this document.   |
+-------------+-----------+-------------------------------------------------------------------------------------------------+
| 15          | R/W       | **ebreakm**                                                                                     |
+-------------+-----------+-------------------------------------------------------------------------------------------------+
| 12          | R/W       | **ebreaku**                                                                                     |
+-------------+-----------+-------------------------------------------------------------------------------------------------+
| 11          | R/W       | **stepi**                                                                                       |
+-------------+-----------+-------------------------------------------------------------------------------------------------+
| 8:6         | R/W       | **cause**                                                                                       |
+-------------+-----------+-------------------------------------------------------------------------------------------------+
| 2           | R/W       | **step**                                                                                        |
+-------------+-----------+-------------------------------------------------------------------------------------------------+
| 1:0         | R         | **priv:** returns the current priviledge mode                                                   |
+-------------+-----------+-------------------------------------------------------------------------------------------------+

.. _csr-dpc:

Debug PC (``dpc``)
------------------

CSR Address: 0x7B1

Reset Value: 0x0000_0000

Detailed:

+----------+
| 31 : 0   |
+==========+
| DPC      |
+----------+

When the core enters in Debug Mode, DPC contains the virtual address of
the next instruction to be executed.

Debug Scratch Register 0/1 (``dscratch0/1``)
--------------------------------------------

CSR Address: 0x7B2/0x7B3

Reset Value: 0x0000_0000

Detailed:

+-------------+
| 31 : 0      |
+=============+
| DSCRATCH0/1 |
+-------------+

Scratch register that can be used by implementations that need it.

Machine Cycle Counter (``mcycle``)
----------------------------------

CSR Address: 0xB00

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:0  | R/W  | 0                                                                |
+-------+------+------------------------------------------------------------------+

The lower 32 bits of the 64 bit machine mode cycle counter.

Machine Instructions-Retired Counter (``minstret``)
---------------------------------------------------

CSR Address: 0xB02

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:0  | R/W  | 0                                                                |
+-------+------+------------------------------------------------------------------+

The lower 32 bits of the 64 bit machine mode instruction retired counter.

Machine Performance Monitoring Counter (``mhpmcounter3 .. mhpmcounter31``)
--------------------------------------------------------------------------

CSR Address: 0xB03 - 0xB1F

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:0  | R/W  | 0                                                                |
+-------+------+------------------------------------------------------------------+

The lower 32 bits of the 64 bit machine mode performance counter.
Non implemented counters always return a read value of 0.

Upper 32 Machine Cycle Counter (``mcycleh``)
--------------------------------------------

CSR Address: 0xB80

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:0  | R/W  | 0                                                                |
+-------+------+------------------------------------------------------------------+

The upper 32 bits of the 64 bit machine mode cycle counter.

Upper 32 Machine Instructions-Retired Counter (``minstreth``)
-------------------------------------------------------------

CSR Address: 0xB82

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:0  | R/W  | 0                                                                |
+-------+------+------------------------------------------------------------------+

The upper 32 bits of the 64 bit machine mode instruction retired counter.

Upper 32 Machine Performance Monitoring Counter (``mhpmcounter3h .. mhpmcounter31h``)
-------------------------------------------------------------------------------------

CSR Address: 0xB83 - 0xB9F

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:0  | R/W  | 0                                                                |
+-------+------+------------------------------------------------------------------+

The upper 32 bits of the 64 bit machine mode performance counter.
Non implemented counters always return a read value of 0.

Machine Vendor ID (``mvendorid``)
---------------------------------

CSR Address: 0xF11

Reset Value: 0x0000_0602

Detailed:

+-------------+-----------+------------------------------------------------------------------------+
|   Bit #     |   R       |   Description                                                          |
+=============+===========+========================================================================+
| 31:7        | R         | 0xC. Number of continuation codes in JEDEC manufacturer ID.            |
+-------------+-----------+------------------------------------------------------------------------+
| 6:0         | R         | 0x2. Final byte of JEDEC manufacturer ID, discarding the parity bit.   |
+-------------+-----------+------------------------------------------------------------------------+

The ``mvendorid`` encodes the OpenHW JEDEC Manufacturer ID, which is 2 decimal (bank 13).

Machine Architecture ID (``marchid``)
-------------------------------------

CSR Address: 0xF12

Reset Value: 0x0000_0000

Detailed:

+-------------+-----------+------------------------------------------------------------------------+
|   Bit #     |   R       |   Description                                                          |
+=============+===========+========================================================================+
| 31:0        | R         | Reads return 0.                                                        |
+-------------+-----------+------------------------------------------------------------------------+

Machine Implementation ID (``mimpid``)
--------------------------------------

CSR Address: 0xF13

Reset Value: 0x0000_0000

Detailed:

+-------------+-----------+------------------------------------------------------------------------+
|   Bit #     |   R       |   Description                                                          |
+=============+===========+========================================================================+
| 31:0        | R         | Reads return 0.                                                        |
+-------------+-----------+------------------------------------------------------------------------+

.. _csr-mhartid:

Hardware Thread ID (``mhartid``)
--------------------------------

CSR Address: 0xF14

Reset Value: Defined

+-------------+-----------+----------------------------------------------------------------+
|   Bit #     |   R       |   Description                                                  |
+=============+===========+================================================================+
| 31:0        | R         | Hardware Thread ID **hart_id_i**, see  :ref:`core-integration` |
+-------------+-----------+----------------------------------------------------------------+

Table 14: MHARTID

.. only:: USER

  User Trap-Vector Base Address (``utvec``)
  -----------------------------------------

  CSR Address: 0x005

  +-------------+-----------+---------------------------------------------------------------------------------------------------------------+
  |   Bit #     |   R/W     |   Description                                                                                                 |
  +=============+===========+===============================================================================================================+
  | 31 : 2      |   R/W     | BASE: The trap-handler base address, always aligned to 256 bytes, i.e., utvec[7:2] is always set to 0.        |
  +-------------+-----------+---------------------------------------------------------------------------------------------------------------+
  |  1 : 0      |   R/W     | MODE: 00 = direct mode, 01 = vectored mode. Writes to bit 1 are ignored and this bit always reads as 0.       |
  +-------------+-----------+---------------------------------------------------------------------------------------------------------------+

  When an exception is encountered in user-mode, the core jumps to the
  corresponding handler using the content of the UTVEC[31:8] as base
  address. Only 8-byte aligned addresses are allowed. Both direct mode
  and vectored mode are supported.

  Table 10: UTVEC

  User Exception PC (``uepc``)
  ----------------------------

  CSR Address: 0x041

  Reset Value: 0x0000_0000

  +------+-------+
  | 31   | 30: 0 |
  +======+=======+
  | UEPC |       |
  +------+-------+

  When an exception is encountered in user mode, the current program
  counter is saved in UEPC, and the core jumps to the exception address.
  When a uret instruction is executed, the value from UEPC replaces the
  current program counter.

  User Cause (``ucause``)
  -----------------------

  CSR Address: 0x042

  Reset Value: 0x0000_0000

  +-----------+----+----+----+---+
  | 31 : 4    | 3  | 2  | 1  | 0 |
  +===========+====+====+====+===+
  | Interrupt | Exception Code   |
  +-----------+------------------+

  Detailed:

  +-------------+-----------+------------------------------------------------------------------------------------+
  |   Bit #     |   R/W     |   Description                                                                      |
  +=============+===========+====================================================================================+
  | 31          | R/W       | **Interrupt:** This bit is set when the exception was triggered by an interrupt.   |
  +-------------+-----------+------------------------------------------------------------------------------------+
  | 4:0         | R/W       | **Exception Code**                                                                 |
  +-------------+-----------+------------------------------------------------------------------------------------+

  Table 12: UCAUSE

.. only:: PMP

  PMP Configuration (``pmpcfgx``)
  -------------------------------

  CSR Address: 0x3A{0,1,2,3}

  Reset Value: 0x0000_0000

  +----------+
  | 31 : 0   |
  +==========+
  | PMPCFGx  |
  +----------+

  If the PMP is enabled, these four registers contain the configuration of
  the PMP as specified by the official privileged spec 1.10.

  PMP Address (``pmpaddrx``)
  --------------------------

  CSR Address: 0x3B{0x0, 0x1, …. 0xF}

  Reset Value: 0x0000_0000

  +----------+
  | 31 : 0   |
  +==========+
  | PMPADDRx |
  +----------+

  If the PMP is enabled, these sixteen registers contain the addresses of
  the PMP as specified by the official privileged spec 1.10.

Cycle Counter (``cycle``)
-------------------------

CSR Address: 0xC00

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:0  | R    | 0                                                                |
+-------+------+------------------------------------------------------------------+

Read-only unprivileged shadow of the lower 32 bits of the 64 bit machine mode cycle counter.

Instructions-Retired Counter (``instret``)
------------------------------------------

CSR Address: 0xC02

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:0  | R    | 0                                                                |
+-------+------+------------------------------------------------------------------+

Read-only unprivileged shadow of the lower 32 bits of the 64 bit machine mode instruction retired counter.

Performance Monitoring Counter (``hpmcounter3 .. hpmcounter31``)
----------------------------------------------------------------

CSR Address: 0xC03 - 0xC1F

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:0  | R    | 0                                                                |
+-------+------+------------------------------------------------------------------+

Read-only unprivileged shadow of the lower 32 bits of the 64 bit machine mode
performance counter. Non implemented counters always return a read value of 0.

Upper 32 Cycle Counter (``cycleh``)
-----------------------------------

CSR Address: 0xC80

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:0  | R    | 0                                                                |
+-------+------+------------------------------------------------------------------+

Read-only unprivileged shadow of the upper 32 bits of the 64 bit machine mode cycle counter.

Upper 32 Instructions-Retired Counter (``instreth``)
----------------------------------------------------

CSR Address: 0xC82

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:0  | R    | 0                                                                |
+-------+------+------------------------------------------------------------------+

Read-only unprivileged shadow of the upper 32 bits of the 64 bit machine mode instruction retired counter.

Upper 32 Performance Monitoring Counter (``hpmcounter3h .. hpmcounter31h``)
---------------------------------------------------------------------------

CSR Address: 0xC83 - 0xC9F

Reset Value: 0x0000_0000

Detailed:

+-------+------+------------------------------------------------------------------+
| Bit#  | R/W  | Description                                                      |
+=======+======+==================================================================+
| 31:0  | R    | 0                                                                |
+-------+------+------------------------------------------------------------------+

Read-only unprivileged shadow of the upper 32 bits of the 64 bit machine mode
performance counter. Non implemented counters always return a read value of 0.
